{
  "Momento Cake React Component": {
    "prefix": "mccomponent",
    "body": [
      "import React from 'react'",
      "",
      "interface ${1:ComponentName}Props {",
      "  ${2:// Add your props here}",
      "}",
      "",
      "export const ${1:ComponentName}: React.FC<${1:ComponentName}Props> = ({",
      "  ${3:// Destructure props here}",
      "}) => {",
      "  return (",
      "    <div className=\"${4:// Add your classes here}\">",
      "      ${5:// Component content}",
      "    </div>",
      "  )",
      "}",
      "",
      "export default ${1:ComponentName}"
    ],
    "description": "Create a new React component for Momento Cake admin"
  },
  "Momento Cake Page Component": {
    "prefix": "mcpage",
    "body": [
      "import { Metadata } from 'next'",
      "",
      "export const metadata: Metadata = {",
      "  title: '${1:Page Title} | Momento Cake Admin',",
      "  description: '${2:Page description}',",
      "}",
      "",
      "export default function ${1:PageName}Page() {",
      "  return (",
      "    <div className=\"container mx-auto px-4 py-8\">",
      "      <h1 className=\"text-2xl font-bold text-momento-brown mb-6\">",
      "        ${1:Page Title}",
      "      </h1>",
      "      ${3:// Page content}",
      "    </div>",
      "  )",
      "}"
    ],
    "description": "Create a new page component for Momento Cake admin"
  },
  "Firebase Firestore Hook": {
    "prefix": "mcfirestore",
    "body": [
      "import { useState, useEffect } from 'react'",
      "import { collection, query, onSnapshot, DocumentData } from 'firebase/firestore'",
      "import { db } from '@/lib/firebase'",
      "",
      "export function use${1:CollectionName}() {",
      "  const [${2:data}, set${1:CollectionName}] = useState<DocumentData[]>([])",
      "  const [loading, setLoading] = useState(true)",
      "  const [error, setError] = useState<string | null>(null)",
      "",
      "  useEffect(() => {",
      "    const q = query(collection(db, '${3:collection-name}'))",
      "    ",
      "    const unsubscribe = onSnapshot(q, ",
      "      (snapshot) => {",
      "        const items = snapshot.docs.map(doc => ({",
      "          id: doc.id,",
      "          ...doc.data()",
      "        }))",
      "        set${1:CollectionName}(items)",
      "        setLoading(false)",
      "      },",
      "      (error) => {",
      "        console.error('Error fetching ${2:data}:', error)",
      "        setError(error.message)",
      "        setLoading(false)",
      "      }",
      "    )",
      "",
      "    return () => unsubscribe()",
      "  }, [])",
      "",
      "  return { ${2:data}, loading, error }",
      "}"
    ],
    "description": "Create a Firestore hook for real-time data"
  },
  "Momento Cake Form Component": {
    "prefix": "mcform",
    "body": [
      "import { useState } from 'react'",
      "import { Button } from '@/components/ui/button'",
      "import { Input } from '@/components/ui/input'",
      "import { Label } from '@/components/ui/label'",
      "",
      "interface ${1:FormName}Props {",
      "  onSubmit: (data: ${1:FormName}Data) => Promise<void>",
      "  initialData?: Partial<${1:FormName}Data>",
      "}",
      "",
      "interface ${1:FormName}Data {",
      "  ${2:// Define your form data structure}",
      "}",
      "",
      "export const ${1:FormName}: React.FC<${1:FormName}Props> = ({",
      "  onSubmit,",
      "  initialData",
      "}) => {",
      "  const [formData, setFormData] = useState<${1:FormName}Data>({",
      "    ${3:// Initialize form data}",
      "    ...initialData",
      "  })",
      "  const [isSubmitting, setIsSubmitting] = useState(false)",
      "",
      "  const handleSubmit = async (e: React.FormEvent) => {",
      "    e.preventDefault()",
      "    setIsSubmitting(true)",
      "    try {",
      "      await onSubmit(formData)",
      "    } finally {",
      "      setIsSubmitting(false)",
      "    }",
      "  }",
      "",
      "  return (",
      "    <form onSubmit={handleSubmit} className=\"space-y-4\">",
      "      ${4:// Form fields}",
      "      <Button ",
      "        type=\"submit\" ",
      "        disabled={isSubmitting}",
      "        className=\"w-full bg-momento-primary hover:bg-momento-secondary\"",
      "      >",
      "        {isSubmitting ? 'Salvando...' : 'Salvar'}",
      "      </Button>",
      "    </form>",
      "  )",
      "}"
    ],
    "description": "Create a form component with Momento Cake styling"
  }
}