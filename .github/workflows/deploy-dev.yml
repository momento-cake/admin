name: Deploy to Development

on:
  push:
    branches: [develop, dev]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    env:
      NODE_VERSION: '20'
      FIREBASE_PROJECT: momentocake-dev

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint

      - name: Run type check
        run: npm run type-check

      - name: Build application
        run: npm run build
        env:
          NODE_ENV: development
          NEXT_PUBLIC_ENVIRONMENT: dev
          NEXT_PUBLIC_FIREBASE_API_KEY: AIzaSyBYeM6XGcyZQqbOJ3paVMactIT12YEaeUc
          NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: momentocake-dev.firebaseapp.com
          NEXT_PUBLIC_FIREBASE_PROJECT_ID: momentocake-dev
          NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: momentocake-dev.firebasestorage.app
          NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: 14129909413
          NEXT_PUBLIC_FIREBASE_APP_ID: 1:14129909413:web:7d4e4eaf56ae27c1dc474c
          NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID: G-ZD8C48YF7L

      - name: Setup Firebase CLI
        run: npm install -g firebase-tools

      - name: Authenticate to Firebase
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_KEY_DEV }}

      - name: Deploy to Firebase Hosting
        run: |
          firebase use ${{ env.FIREBASE_PROJECT }}
          firebase deploy --only hosting --non-interactive
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}

      - name: Comment deployment URL
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        with:
          script: |
            const deployUrl = 'https://${{ env.FIREBASE_PROJECT }}.web.app'
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `üöÄ Development deployment successful!\n\nüìù Preview URL: ${deployUrl}`
            })